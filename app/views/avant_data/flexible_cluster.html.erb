<div class="container" ng-controller="PieChartController">
  <div class="row">
    <div class="col-xs-2">
      Filter by column:
      <select id="column" class="form-control" ng-model="dataColumn" ng-options="name for name in columns"></select>
    </div>
  </div>

  <nvd3 options="options" data="data"></nvd3>

  <hr>

  <div class='row'>
    <div class='col-sm-2'>
      <ul style="padding-left: 5px" >
        <li ng-repeat="column in selectedColumns">
          {{ column }} [<a href ng-click="selectedColumns.splice($index, 1)">X</a>]
        </li>
      </ul>

      <select ng-model="columnToBeAdded" ng-change="addToSelectedColumns(columnToBeAdded)" ng-options="column for column in difference(columns, selectedColumns)">
      </select>

    </div>
    <div class='col-sm-10'>
      <table class='table'>
        <thead>
          <tr>
            <th ng-repeat="column in selectedColumns">{{ column }}</th>
          </tr>
        </thead>
        <tbody>
          <tr ng-repeat="data in avantData">
            <td ng-repeat="column in selectedColumns">{{ data[column]}}</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>

<%= content_for :add_later do%>
  <script>
    $(function(){
      var group = color = '';
      var size = 'size';
      //start('born_city');

      $('#column').change(function() {
        $('#chart').empty();
        column = $("#column option:selected").text();
        start(column);
      });


      function start(column) {
        $.getJSON("/avant_data/flexible_cluster.json?column=" + column, function(data){
          create(data);
        })
      }
      
      function create(data) {
        var colors = {
          default: '#4CC1E9' 
        };

        var radius = 35;
        var width = 1200;
        var height = 300;
        var fill = d3.scale.ordinal().range(['#FF00CC','#FF00CC','#00FF00','#00FF00','#FFFF00','#FF0000','#FF0000','#FF0000','#FF0000','#7F0000']);
        var svg = d3.select("#chart").append("svg")
            .attr("width", width)
            .attr("height", height);
        var force = d3.layout.force();


        data = getDataMapping(data, size);

        var padding = 5;
        var maxRadius = d3.max(_.pluck(data, 'size'));

        var nodes = svg.selectAll("circle")
          .data(data);

        nodes.enter().append("circle")
          .attr("class", "node")
          .attr("cx", function (d) { return d.x; })
          .attr("cy", function (d) { return d.y; })
          .attr("r", function (d) { return d.radius; })
          .style("fill", function (d, i) { return colors['default']; })
          .on("mouseover", function (d) { showPopover.call(this, d); })
          .on("mouseout", function (d) { removePopovers(); })
          .on("click", function (d){ console.log(d); });

        function getDataMapping(data, vname) {
          var max = d3.max(_.pluck(data, vname));
          
          for (var j = 0; j < data.length; j++) {
            data[j].radius = (vname != '') ? radius * (data[j][vname] / max) : 15;
            data[j].x = data[j].x ? data[j].x : Math.random() * width;
            data[j].y = data[j].y ? data[j].y : Math.random() * height / 2;
          }

          return data;
        }

        function removePopovers () {
          $('.popover').each(function() {
            $(this).remove();
          }); 
        }

        function showPopover (d) {
          $(this).popover({
            placement: 'auto top',
            container: 'body',
            trigger: 'manual',
            html : true,
            content: function() { 
              return "Value: " + d.value + "<br />" +
              "Size: " + d.size + "<br />"
            }
          });
          $(this).popover('show')
        }
      }
      
    })



  </script>
<% end %>